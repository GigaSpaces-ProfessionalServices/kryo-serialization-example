<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:os-core="http://www.openspaces.org/schema/core"
       xmlns:os-remoting="http://www.openspaces.org/schema/remoting"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
       http://www.openspaces.org/schema/core http://www.openspaces.org/schema/10.0/core/openspaces-core.xsd
       http://www.openspaces.org/schema/remoting http://www.openspaces.org/schema/10.0/remoting/openspaces-remoting.xsd">

  <!--
      Spring property configurer which allows us to use system properties (such as user.name).
  -->
  <bean id="propertiesConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"/>

  <!--
      Enables the usage of @GigaSpaceContext annotation based injection.
  -->
  <os-core:giga-space-context/>

  <!--
      A bean representing a space (an IJSpace implementation).

      Note, we do not specify here the cluster topology of the space. It is declated outside of
      the processing unit or within the SLA bean.
  -->
  <!--<os-core:space id="space" url="/./space"/>-->
  <os-core:embedded-space id="space" name="shoppingcart-space"/>

  <!-- Support @RemotingService component scanning -->
  <context:component-scan base-package="com.gigaspaces.kryo_example.space"/>

  <!-- Support the @RemotingService annotation on a service-->
  <os-remoting:annotation-support />

  <!--
      Defines a distributed transaction manager.
  -->
  <os-core:distributed-tx-manager id="transactionManager"/>

  <!--
      OpenSpaces simplified space API built on top of IJSpace/JavaSpace.
  -->
  <os-core:giga-space id="gigaSpace" space="space" tx-manager="transactionManager"/>

  <os-remoting:service-exporter id="serviceExporter" />

</beans>